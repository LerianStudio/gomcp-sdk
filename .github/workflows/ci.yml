name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.23', '1.24']
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run tests
      run: go test -v -race ./...
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Check formatting
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24'
      run: |
        if [ -n "$(gofmt -l .)" ]; then
          echo "Code is not formatted. Run 'gofmt -w .'"
          gofmt -l .
          exit 1
        fi
    
    - name: Run golangci-lint
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24'
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: --timeout=10m
      continue-on-error: true